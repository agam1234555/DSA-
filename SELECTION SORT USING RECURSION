import java.util.Arrays;

public class RecursiveSelectionSort {
    static void selectionSort(int[] arr, int start, int n) {
        // Base condition: If start index reaches the last index, sorting is done
        if (start >= n - 1) {
            return;
        }

        // Find the index of the minimum element in the remaining array
        int minIndex = start;
        for (int j = start + 1; j < n; j++) {
            if (arr[j] < arr[minIndex]) {
                minIndex = j;
            }
        }

        // Swap the found minimum element with the first element
        int temp = arr[start];
        arr[start] = arr[minIndex];
        arr[minIndex] = temp;

        // Recursively call selectionSort for the remaining array
        selectionSort(arr, start + 1, n);
    }

    public static void main(String[] args) {
        int[] arr = {64, 25, 12, 22, 11};
        System.out.println("Original Array: " + Arrays.toString(arr));

        selectionSort(arr, 0, arr.length);

        System.out.println("Sorted Array: " + Arrays.toString(arr));
    }
}
